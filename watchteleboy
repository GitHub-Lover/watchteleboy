#!/bin/bash
################################################
# Bash script for watching/recording online TV 
# streams from teleboy.ch without browser and 
# =no f*** flash=.
#
# License:  GNU GPL v2
# Author:   Alexander Tuchacek
# written:  2011-05-21
# modified by: Roman Haefeli
# modified on: 2011-06-08
# program version  1.1~unreleased
################################################

VERSION="1.1~unreleased"

# Set some default variables
USER="username"
PASS="password"
TMPPATH=/tmp/watchteleboy
UAGENT='Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1'
MPLAYEROPTS="-really-quiet"

# Channel list
CHANNELS="
ard 111.stream
zdf 101.stream
arte 1611.stream
3sat 141.stream
sf1 11.stream
sf1_o 1591.stream
sf2 81.stream
sfinfo 241.stream
orf1 91.stream
orf2 291.stream
zdfneo 121.stream
atv 211.stream
ntv 401.stream
euronews 2161.stream
phoenix 531.stream
sport1 331.stream
eurosport 391.stream
swr 541.stream
mdr 511.stream
ndr 521.stream
wdr 301.stream
rtl 51.stream
rtl2 321.stream
superrtl 351.stream
vox 131.stream
pro7 61.stream
sat1 71.stream
kabel1 311.stream
dasvierte 1721.stream
dmax 151.stream
3plus 1701.stream
telezueri 1971.stream
nickelodeon 221.stream
deluxe 1921.stream
viva 171.stream
joiz 5011.stream
"
# Default channel
CH="3sat"

# Check for necessary binaries
programlist="rtmpdump mplayer wget grep cut"
for program in $programlist
do
    if ! which $program > /dev/null
    then
        echo "ERROR:"
        echo "Could not find ${program}. Is it installed?"
        echo ""
        echo "Exiting..."
        exit 1
    fi
done

# Read config: !!CONFIG overrides default values!!
CONFIG=~/.watchteleboyrc
if [ -f $CONFIG ]
then
  . $CONFIG
fi

# Comandline argument parsing
channel=false
list=false
help=false
version=false
while [ $# -gt 0 ]
do
  case "$1" in
    -c|--channel) channel=true; CH=$2; shift;;
    -l|--list) list=true;;
    -h|--help) help=true;;
    -v|--version) version=true;;
    -*) echo "$(basename $0): error - unrecognized option '$1'" 1>&2
        echo "use '$(basename $0) --help' to get a list of available options"
        exit 1;;
    *)  break;;
  esac
  shift
done

# option -v|--version
if $version
then
  echo "watchteleboy $VERSION"
  echo "written by Alexander Tuchacek & Roman Haefeli"
  echo "Licensed under the GNU Public License 2.0 (GPL-2)"
  exit
fi

# option -l|--list
if $list
then
  echo "$CHANNELS" | cut -d " " -f 1 
  exit
fi

# option -h|--help
if $help
then
  cat << EOF

watchteleboy
------------
-c|--channel CHANNEL    play channel CHANNEL
-h|--help               show this help and exit
-l|--list               print a list of all channels and exit
-v|--version            print the version of this program
<no options>            go into interactive mode

EOF
  exit
fi

# Create TMPDIR if required
if  [ ! -d $TMPPATH ]
then
  mkdir -p $TMPPATH
fi

# get the session cookie
POST="login=${USER}&password=${PASS}&x=13&y=17&followup=%2Ftv%2Fplayer%2Fplayer.php"
URL="http://www.teleboy.ch/layer/rectv/free_live_tv.inc.php"
COOKIE=$(wget -U "$UAGENT" \
  --quiet \
  --no-check-certificate \
  --save-cookies /dev/stdout \
  --keep-session-cookies \
  --post-data $POST \
  -O $TMPPATH/step1.html \
  $URL)

# check if login was succesful
cat $TMPPATH/step1.html | grep "Falsche Eingaben" > /dev/null || \
cat $TMPPATH/step1.html | grep "<h1>Login f&uuml;r Member</h1>" > /dev/null
if [ $? -eq 0 ]
then
  echo "login failed!!!!"
  exit 1
else
  echo "login ok..." 
fi

# get flashplayer url
SWFFILE=$(wget \
  -O - \
  --quiet \
  "http://www.teleboy.ch/tv/player/player.php" | \
  grep "nelloplayer" | \
  cut -d'"' -f2)

function compose_rtmp_command {
  # ARGS:
  # 1: channel
  # 2: output file
  URLBASE="http://www.teleboy.ch/tv/player"
  POST="cmd=getLiveChannelParams&cid=14&cid2=0"
  STREAMINFO=$(wget -U "$UAGENT" \
    --quiet \
    --referer "${URLBASE}/player.php" \
    --load-cookies <(echo "$COOKIE") \
    --post-data $POST \
    --keep-session-cookies \
    --output-document /dev/stdout \
    "${URLBASE}/includes/ajax.php")

  # get rtmp parameters
  ch=$(echo "$STREAMINFO" | cut -d "|" -f1)
  app=$(echo "$STREAMINFO"  | cut -d "|" -f2)
  c1=$(echo "$STREAMINFO"  | cut -d "|" -f3)
  c2=$(echo "$STREAMINFO"  | cut -d "|" -f4)
  c3=$(echo "$STREAMINFO"  | cut -d "|" -f5)
  c4=$(echo "$STREAMINFO"  | cut -d "|" -f6)
  c5=$(echo "$STREAMINFO"  | cut -d "|" -f7)
  c6=$(echo "$STREAMINFO"  | cut -d "|" -f8)
  playpath=$(echo "$CHANNELS" | grep "^$1" | head -n1 | cut -d " " -f 2)

  # rtmpdump command
  RTMP="rtmpdump 
    -r rtmp://62.65.136.20/nellotv 
    -a $app 
    -f LNX 10,3,181,14 
    -W ${URLBASE}/${SWFFILE} 
    -p ${URLBASE}/player.php 
    -C S:$c1 -C S:$c2 -C S:$c3 -C S:$c4 
    -C S:$c5 
    -C S:$c6 
    -y $playpath 
    -q 
    -o $2 "
}

# test channel input validity
function chanvalidity {
  # ARGS:
  # 1: channel
  echo $CHANNELS | grep $1 > /dev/null
}

# channel selector
function chanselectah {
  while true
  do
    echo -e "\nCHANNELS:"
    echo "$CHANNELS" | cut -d " " -f 1 | tr "\n" " "
    echo ""
    read -p "TV Channel (default is $CH): " -e SEL
    if [ -n "$SEL" ]
    then
      chanvalidity $SEL && \
        CH="$SEL" && \
        break
      echo "Channel '$SEL' is not available..." 
      sleep 1
    fi
  done 
}

# Compose mplayer command
MPLAYER="mplayer $MPLAYEROPTS - "

# option -c|--channel
if $channel
then
  if chanvalidity $CH
  then
    compose_rtmp_command $CH "-"
    echo "Now playing ${CH}..."
    $RTMP | $MPLAYER 2> /dev/null
    exit 0
  else
    echo "Channel '$CH' is not available..."
    exit 1
  fi
fi

# Loop for interactive mode
while true
do
  chanselectah
  compose_rtmp_command $CH "-"
  echo "Now playing ${CH}..."
  $RTMP | $MPLAYER 2> /dev/null
  #$RTMP
done

exit 0

